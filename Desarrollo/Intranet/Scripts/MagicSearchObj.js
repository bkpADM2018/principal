/*M       M        A        GGGG   III    CCCC        SSSS   EEEEE      A        RRR      CCCC   H     H             rrMM MM    A    A   G 	     I     C               S             E           A     A   R     R   C           H     H        rr  R   rr M  M  M   AAAA   G  GGG     I    C                  SSS     EEE      AAAA   RRR     C            HHHH             rrM       M   A      A   G       G     I     C                        S   E           A      A  R    R     C           H     H              M       M   A      A    GGGG    III    CCCC       SSSS    EEEEE A      A  R       R    CCCC  H     H                  *************************************************************************************************************************************AUTOR: Ezequiel BacariniFECHA ULTIMA REVISION: 04-10-2008************************************************************************************************************************************** *  Como Usar:MagicSearch               *    1- En la pagina que se desee utilizar el componente MagicSearch se debera definir *    un DIV  el cual estara en la posicion donde debera aparecer el input. *    2- Mediante codigo JavaScript se debera crear un objeto del tipo MagicSearch *    de la siguiente manera: var MSobj = new MagicSearch(list, divId, size, cols, url) donde: *				list: es la lista de valores posibles que puede tomar el input * 				divId: es el id del DIV creado en el paso 1	 *				size: es el tamaño que tendra el input de acuerdo a lo que este tenga que mostrar * 				cols: es la cantidad de columnas en donde se mostraran las ocurrencias de una busqueda en la lista  *				url: es el nombre de la pagina desde donde se obtendra la lista de posibles valores que podra asumir el input. (Ajax) ************************************************************************************************************************************* *  Metodos utiles de MS *	getSelectedItem()	este metodo nos devolvera el valor cargado al momento de la invocacion en el input *	setValue()	este metodo nos permitira setearle un valor por defecto al input *	setNewList(pList, pToken)   este metodo nos permitira actualizar la lista posibles de valores dinamicamente. pList es la lista de valores y el token es opcional,  *					representa el separador de los valores. *	setNewURL()    este metodo nos permitira actualizar la la url desde donde tomar los valores dinamicamente *	setToken()    este metodo nos permitira establecer un separador de listas difenrentes al que utiliza el MagicSearch por defecto *	setMinChar()	este metodo establece la cantidad de caracteres minimas que se deben ingresar para que el MagicSearch realice la busqueda (Usado para tablas con grandes cantidades de datos) ************************************************************************************************************************************* *    Aclaraciones importantes  *   	1- la lista que espera el objeto MS tendra el siguiente formato (Default): *			elem1, elem2, elem3, elem4,......., elemN	(Notese que antes de cada elemento, y posteriormente a la coma, debe haber un espacio) ************************************************************************************************************************************* *	EVENTOS *		El componente define dos eventos: * *		onBlur - Es llamado cuando se abandona el campo. *		onSelect - Es llamado cuando se elige un elemento de la lista. *  *	Para ambos, los parametros que son pasados por el componente son: *				<evento>(ms) *	Donde ms es la instancia del MagicSearch que origino el llamado. *	Para asignar un evento simplemente asigne la función:   ms.onBlur = myFunc; *	 ************************************************************************************************************************************* */var MS_DEFAULT_TOKEN = ', 'var $msCh = new channel();var $msRegistro = new Array();	//Registro de MS//---------------------------------------------------------------------------------------------------------------------------------------------function MagicSearch(pList, pName, pSize, pCols, pURL) { 	this._number = $msRegistro.push(this)-1;  	this.MSList = new String();	this.MSSubList = new String();	this.MSKey = new String();	this.myShowList = new String();		this.myControlName = pName + '_text';	this.myMGsel; 	this.mgCantResults;	this.mgCols;		this.MSURL = pURL || '';	this.MSCache = new Array();	this.mgIndex = new Number();	this.mgSelectText;	this.mgIndex = 0;	this.resultsWidth = 0;	this.maxCols = pCols;	this.isWaiting = new Boolean;	this.mgSelectText = '';	this.nameDIV = pName;	this.inputTextId = pName + "_" + this._number;	this.token = MS_DEFAULT_TOKEN;	this.minChar = 1;	//Eventos definidos por el usuario.	this.onBlur = undefined;	this.onSelect = undefined;		this.gko = navigator.userAgent.toLowerCase(); //detectar si el navegador del ciente soporta Gecko     this.isIE = (window.navigator.userAgent.indexOf('MSIE')> 0); 	if (! this.isIE){           HTMLElement.prototype.__defineGetter__('innerText',function () { return(this.textContent); });           HTMLElement.prototype.__defineSetter__('innerText',function (txt) { this.textContent = txt; });    }	var myTXT;	this.MSList = this.token + pList;	this.MSList = this.MSList.toUpperCase(); 	myTXT = "<input type='text' autocomplete='off' onblur='MagicSearchBlur(" + this._number + ", this)' onSelect='MagicSearchSelect(" + this._number + ")' onKeyDown='return MagicSearchKeyPressPre(this, event, " + this._number + ");' tabindex='0' size=" + pSize + " id='" + this.myControlName + "' name='" + this.myControlName + "'>";	myTXT = myTXT + '<input type=\'hidden\' id=\'' + this.inputTextId + '\'  name=\'' + this.nameDIV + '\' value=\'empty\'>';		document.getElementById(this.nameDIV).innerHTML = myTXT;	document.getElementById(this.myControlName).setAttribute("autocomplete","off");											this.getSelectedItem =	function() {								if (document.getElementById(this.myControlName))									return document.getElementById(this.myControlName).value;								else									return '';									}	this.setValue =			function(pValue) {								document.getElementById(this.myControlName).value = pValue;								document.getElementById(this.inputTextId).value = pValue;							}									this.setToken =			function(pToken) {								this.token = pToken;							}	this.setNewList = 		function(pList, pToken) {								if (pToken) this.setToken(pToken);								document.getElementById(this.myControlName).value = '';								this.MSList = this.token + pList;								this.MSList = this.MSList.toUpperCase();							}		this.setNewURL = 		function(pURL) {								document.getElementById(this.myControlName).value = '';								this.MSURL = pURL;								this.MSList = '';							}		this.setMinChar = 		function(pMin) {								this.minChar = pMin;							}		this.setResultsWidth = 	function(pWidth) {								this.resultsWidth = pWidth;							}		this.setMinChar = 		function(pMin) {								this.minChar = pMin;							}								CreateTableLoading (this._number);	return this;}		//---------------------------------------------------------------------------------------------------------------------------------------------function MagicSearchHide(pNro){		var myObj = $msRegistro[pNro];		if (document.getElementById('MSResults' + pNro) != null){			document.getElementById(myObj.nameDIV).removeChild(document.getElementById('MSResults' + pNro));		}		myObj.myMGsel = false;}//--------------------------------------------------------------------------------------------------------------------------------------------- 	function MagicSearchShowSearch(pList, pNro, pToken){		var myObj = $msRegistro[pNro];    var mySplit, i, j, oTR, oTD, col2, col3, col4, text;	MagicSearchCloseResults(pNro);		var myBody = document.getElementById(myObj.nameDIV);	var myOffsetTop = 0;	var myOffsetLeft = 0;	// Crear tabla y tbody	var myTable     = document.createElement('table');	var myTableBody = document.createElement('tbody');	// crear las celdas	var myCurrentRow, myCurrentCell, myCurrentCell2, myCurrentCell3, myCurrentCell4, myCurrentText, myCurrentAnchor;	mySplit = pList.split(pToken);	if ((mySplit.length > 60) && (myObj.maxCols==4)){      		col2 = true;	 		col3 = true;     		col4 = true;	 		myObj.mgCols = 4;	}else if ((mySplit.length > 40) && (myObj.maxCols==3)){		col2 = true;	 		col3 = true;     		col4 = false;	 		myObj.mgCols = 3;	}else if ((mySplit.length > 20) && (myObj.maxCols==2)){		col2 = true;	 		col3 = false;    		col4 = false;	 		myObj.mgCols = 2;	}else{		col2 = false;	 		col3 = false;    		col4 = false;	 		myObj.mgCols = 1; 	}	for (i=0; i < 73; i++){				myCurrentRow = document.createElement('tr');		// Inicio Columna 1		if (i < (mySplit.length-1)) {			text = mySplit[i+1];		} else {			text = '';				}				myCurrentCell = document.createElement('td');		myCurrentCell.setAttribute('id','TD1(' + (i + 1) + ')');		myCurrentAnchor = document.createElement('a');		myCurrentAnchor.innerHTML = text;							myCurrentRow.setAttribute('id', mySplit[i]);		myCurrentCell.width =  document.getElementById(myObj.myControlName).offsetWidth;				if (text!=''){						if (myObj.gko.indexOf('gecko')!=-1){ //si soporta gecko, es Mozilla, Netscape, Safari, etc								text = text.replace('<b>','');				text = text.replace('</b>','');										myCurrentCell.setAttribute('onclick', "SelectItem('" + text + "');");				myCurrentCell.setAttribute('onmouseover', 'mgResaltar(this,' + myObj._number + ');');				myCurrentCell.setAttribute('onmouseout', 'mgNormal(this);');			}				else{								myCurrentCell['onclick']=new Function("SelectItem('" + myCurrentAnchor.innerText + "');return false;");								myCurrentCell['onmouseover']= new Function('mgResaltar(this,' + myObj._number + ');return false;');								myCurrentCell['onmouseout']= new Function('mgNormal(this);return false;');							}				myCurrentCell.style.cursor = 'pointer';		}				myCurrentAnchor.setAttribute('title', 'Seleccionar este item');		myCurrentCell.appendChild(myCurrentAnchor);		if (col2) i=i+1;		// Fin Columna 1		// Inicio Columna 2			if (col2){			if (i<(mySplit.length-1))				text = mySplit[i+1];			else				text = '';								myCurrentCell2 = document.createElement('td');			myCurrentCell2.setAttribute('id','TD1(' + (i + 1) + ')');			myCurrentAnchor = document.createElement('a');			myCurrentAnchor.innerHTML = text;			myCurrentRow.setAttribute('id', text);			myCurrentCell2.width =  document.getElementById(myObj.myControlName).offsetWidth;			if (text!=''){										if (myObj.gko.indexOf('gecko')!=-1){ //si soporta gecko, es Mozilla, Netscape, Safari, etc					text = text.replace('<b>','');					text = text.replace('</b>','');					myCurrentCell2.setAttribute('onclick', "SelectItem('" + text + "');");					myCurrentCell2.setAttribute('onmouseover', 'mgResaltar(this,' + myObj._number + ');');					myCurrentCell2.setAttribute('onmouseout', 'mgNormal(this);');				}					else{					myCurrentCell2['onclick'] = new Function("SelectItem('" + myCurrentAnchor.innerText + "');return false;"); 					myCurrentCell2['onmouseover'] = new Function('mgResaltar(this,' + myObj._number + ');return false;');					myCurrentCell2['onmouseout'] = new Function('mgNormal(this);return false;');				}					myCurrentCell2.style.cursor = 'pointer';										}			myCurrentAnchor.setAttribute('title', 'Seleccionar este item');			myCurrentCell2.appendChild(myCurrentAnchor);			if (col3) i=i+1;		}		// Fin Columna 2		// Inicio Columna 3		if (col3){			if (i<(mySplit.length-1))				text = mySplit[i+1];			else				text = '';					myCurrentCell3 = document.createElement('td');			myCurrentCell3.setAttribute('id','TD1(' + (i + 1) + ')');			myCurrentAnchor = document.createElement('a');			myCurrentAnchor.innerHTML = text;									myCurrentRow.setAttribute('id', text);			myCurrentCell3.width =  document.getElementById(myObj.myControlName).offsetWidth;			if (text!=''){				if (myObj.gko.indexOf('gecko')!=-1){ //si soporta gecko, es Mozilla, Netscape, Safari, etc					text = text.replace('<b>','');					text = text.replace('</b>','');					myCurrentCell3.setAttribute('onclick', "SelectItem('" + text + "');");					myCurrentCell3.setAttribute('onmouseover', 'mgResaltar(this,' + myObj._number + ');');					myCurrentCell3.setAttribute('onmouseout', 'mgNormal(this);');				}					else{					myCurrentCell3['onclick']=new Function("SelectItem('" + myCurrentAnchor.innerText + "');return false;");					myCurrentCell3['onmouseover']= new Function('mgResaltar(this,' + myObj._number + ');return false;');					myCurrentCell3['onmouseout']= new Function('mgNormal(this);return false;');				}				myCurrentCell3.style.cursor = 'pointer';											}			myCurrentAnchor.setAttribute('title', 'Seleccionar este item');			myCurrentCell3.appendChild(myCurrentAnchor);			if (col4) i=i+1;		}		// Fin Columna 3		// Inicio Columna 4		if (col4){			if (i<(mySplit.length-1))				text = mySplit[i+1];			else				text = '';			myCurrentCell4 = document.createElement('TD');			myCurrentCell4.setAttribute('id','TD1(' + (i + 1) + ')');			myCurrentAnchor = document.createElement('a');			myCurrentAnchor.innerHTML = text;			myCurrentRow.setAttribute('id', text);			myCurrentCell4.width =  document.getElementById(myObj.myControlName).offsetWidth;			if (text!=''){ 				if (myObj.gko.indexOf('gecko')!=-1){ //si soporta gecko, es Mozilla, Netscape, Safari, etc					text = text.replace('<b>','');					text = text.replace('</b>','');					myCurrentCell4.setAttribute('onclick', "SelectItem('" + text + "');");					myCurrentCell4.setAttribute('onmouseover', 'mgResaltar(this,' + myObj._number + ');');					myCurrentCell4.setAttribute('onmouseout', 'mgNormal(this);');							 }				else{					myCurrentCell4['onclick']=new Function("SelectItem('" + myCurrentAnchor.innerText + "');return false;");					myCurrentCell4['onmouseover']= new Function('mgResaltar(this,' + myObj._number + ');return false;');					myCurrentCell4['onmouseout']= new Function('mgNormal(this);return false;');					}					myCurrentCell4.style.cursor = 'pointer';			}			myCurrentAnchor.setAttribute('title', 'Seleccionar este item');			myCurrentCell4.appendChild(myCurrentAnchor);		} 		// Fin Columna 4		myCurrentRow.appendChild(myCurrentCell);		if (col2) myCurrentRow.appendChild(myCurrentCell2);		if (col3) myCurrentRow.appendChild(myCurrentCell3);		if (col4) myCurrentRow.appendChild(myCurrentCell4);		myTableBody.appendChild(myCurrentRow);	}									myObj.mgCantResults = i;	myTable.appendChild(myTableBody);	myTable.setAttribute('id','MSResults'  + myObj._number);	myTable.style.position = 'absolute';	myTable.style.zIndex = 2;	myTable.cellSpacing = 0;	myTable.cellPadding = 0;  	myTable.className = 'mgTable';			var parentObj = document.getElementById(myObj.myControlName).offsetParent;		try{			while (parentObj){				myOffsetTop = myOffsetTop + parentObj.offsetTop;				myOffsetLeft = myOffsetLeft + parentObj.offsetLeft;				parentObj = parentObj.offsetParent;			}		}			catch (e) {			//alert("No " + e.message + "TOP" + myOffsetTop + ", LEFT" + myOffsetLeft);		}			myTable.style.top = myOffsetTop + document.getElementById(myObj.myControlName).offsetTop + (document.getElementById(myObj.myControlName).offsetHeight);	myTable.style.left = myOffsetLeft + document.getElementById(myObj.myControlName).offsetLeft;	if (myObj.resultsWidth > 0){		myTable.width = myObj.resultsWidth; 		}		else{		myTable.width = document.getElementById(myObj.myControlName).offsetWidth * myObj.mgCols; 			}	myBody.appendChild(myTable);}//---------------------------------------------------------------------------------------------------------------------------------------------	function SelectItem(pItem, pNro){		var myObj = $msRegistro[pNro];		document.getElementById(myObj.myControlName).value = pItem;		MagicSearchCloseResults(pNro);}//---------------------------------------------------------------------------------------------------------------------------------------------		function MagicSearchCloseResults(pNro){		if (!isNaN(pNro)){			if (document.getElementById('MSResults' + pNro) != null){				document.getElementById($msRegistro[pNro].nameDIV).removeChild(document.getElementById('MSResults' + pNro));			}			$msRegistro[pNro].mgCantResults = 0;		}	}//---------------------------------------------------------------------------------------------------------------------------------------------function MagicSearchKeyPress(obj, keyPress, pNro){		var myObj = $msRegistro[pNro];		var keyPressed;		keyPressed = keyPress;		// Excepcion teclado numerico		if (keyPressed>95 && keyPressed	<106) keyPressed = keyPressed - 48;		var myKey = String.fromCharCode(keyPressed);		var mySplit, mySplit1, mySplit2, i, myKeyLen, esta, j;		var newValue;		var myAuxText = new String();		var myAuxText2 = new String();		var myAuxKey = new String();		var element;  		myObj.myShowList = '';		myObj.MSKey = myObj.MSKey.toUpperCase(); 		if (myObj.MSKey.length > 0){			myKeyLen = myObj.MSKey.length;			myObj.MSSubList = myObj.MSList;			mySplit = myObj.MSSubList.split(myObj.token);			for (i=0; i < mySplit.length; i++) {				myAuxText = mySplit[i];				myAuxText2 = myAuxText.toUpperCase();				if (myKeyLen>1){					esta = false;										if (myAuxText2.search(myObj.MSKey)>-1){						esta = true;					}									}				else{					myAuxKey = myAuxText.substr(0,myKeyLen);				}				if ((myAuxKey == myObj.MSKey) || esta) {										myAuxText2 = myAuxText2.replace(myObj.MSKey,'<b>' + myObj.MSKey + '</b>');					myObj.myShowList = myObj.myShowList.concat(myObj.token + myAuxText2);				}			}						mySplit2 = myObj.myShowList.split(myObj.token);						if (myObj.myShowList.length > 0){							MagicSearchShowSearch(myObj.myShowList,myObj._number, myObj.token);				}			else{				MagicSearchCloseResults(pNro);			}		}		else{				MagicSearchCloseResults(pNro);		}		document.getElementById('loading(' + pNro + ')').style.visibility = 'hidden';}//---------------------------------------------------------------------------------------------------------------------------------------------	function MagicSearchSelect(pNro){	var obj = $msRegistro[pNro]	obj.myMGsel = true;	if (obj.onSelect) obj.onSelect(obj);}//---------------------------------------------------------------------------------------------------------------------------------------------function MagicSearchBlur(pNro, pObj){	$msRegistro[pNro].myMGsel = false;	if ($msRegistro[pNro].mgSelectText!=''){		pObj.value = $msRegistro[pNro].mgSelectText;   		document.getElementById($msRegistro[pNro].inputTextId).value = $msRegistro[pNro].mgSelectText;		$msRegistro[pNro].mgSelectText = '';	}		MagicSearchCloseResults(pNro);		if (typeof($msRegistro[pNro].onBlur) != "string") {		$msRegistro[pNro].onBlur($msRegistro[pNro]);	}		else{		mgExecuteMethod($msRegistro[pNro].onBlur, $msRegistro[pNro]);	}	}//---------------------------------------------------------------------------------------------------------------------------------------------function mgExecuteMethod(pStr, pObj){		var actionMethod;	var params = new Array();		pStr = pStr.replace(/ /,"");	var lastCh = pStr.charAt(pStr.length-1);	if ((lastCh == ")") || (lastCh == ";")) {	//Hay parentesis		var arrAux = pStr.split(")");		var arrAux2 = arrAux[0].split("(");			actionMethod = eval(arrAux2[0]);		if (arrAux2[1].length > 0) params = arrAux2[1].split(",");				} else {		actionMethod = eval(pStr);	}	params.push(pObj);	actionMethod.apply(this, params);				}//---------------------------------------------------------------------------------------------------------------------------------------------function mgResaltar(obj, pNro){		if ($msRegistro[pNro].mgIndex!=0){			mgNormal(document.getElementById('TD1(' + $msRegistro[pNro].mgIndex + ')'));		}			obj.className = 'mgSelected';			$msRegistro[pNro].mgSelectText = obj.innerText;}//---------------------------------------------------------------------------------------------------------------------------------------------	function mgNormal(obj){		obj.className = 'mgNormal';}	//---------------------------------------------------------------------------------------------------------------------------------------------	function MagicSearchKeyPressPre(obj, evento, pNro){		var myObj = $msRegistro[pNro];	var keyPressed;	var auxValue = new String();	keyPressed = (document.all) ? evento.keyCode : evento.which;	if (keyPressed>95 && keyPressed	<106) keyPressed = keyPressed - 48;	//alert(keyPressed);	var myKey;	if (keyPressed == 192){		myKey = "Ñ";	}else{		myKey = String.fromCharCode(keyPressed);	}	//Arma la clave a buscar, chequear la tecla presionada	auxValue = obj.value;	if (keyPressed==8) //Borro	{		myObj.mgIndex = 0;		myObj.MSKey = obj.value;		if (auxValue.length == 1) {			if (myObj.MSURL) {				myObj.MSList = '';			}			}		if (myObj.MSKey.length > 0) myObj.MSKey = myObj.MSKey.substr(0,myObj.MSKey.length-1);	}	else if(keyPressed==9){ //Tab		if (myObj.mgIndex>0){			obj.value = document.getElementById('TD1(' + myObj.mgIndex + ')').innerText;			MagicSearchCloseResults(pNro);			myObj.mgIndex = 0;			}		else{			if (obj.value != '') MagicSearchCloseResults(pNro);		}		return 0;	}	else if(keyPressed==27){ //Escape			obj.value = "";			MagicSearchCloseResults(pNro);			myObj.mgIndex = 0;				myObj.mgSelectText = "";		return 0;	}	else if(keyPressed==16){ //Shift		return 0;	}	else if(keyPressed==13){ //Enter		if (myObj.mgIndex>0){			obj.value = document.getElementById('TD1(' + myObj.mgIndex + ')').innerText;			MagicSearchCloseResults(pNro);			myObj.mgIndex = 0;			}			return false;	}	else if(keyPressed==37 || keyPressed==38 || keyPressed==39 || keyPressed==40){ //Flechas			for (j=1;j<myObj.mgCantResults;j++){			mgNormal(document.getElementById('TD1(' + j + ')'));		}		if (myObj.mgIndex==0){			myObj.mgIndex=1;			}		else{				switch(keyPressed){				case 37: //Izquierda					myObj.mgIndex = myObj.mgIndex - 1;					break;				case 38: //Arriba					myObj.mgIndex = myObj.mgIndex - myObj.mgCols;					break;				case 39: //Derecha						myObj.mgIndex = myObj.mgIndex + 1;					break;				case 40: //Abajo						myObj.mgIndex = myObj.mgIndex + myObj.mgCols;					break;			}		}		if (myObj.mgCantResults>0){			if (myObj.mgIndex < 1) myObj.mgIndex = 1;			if (myObj.mgIndex > myObj.mgCantResults-1) myObj.mgIndex = myObj.mgCantResults-1;						mgResaltar(document.getElementById('TD1(' + myObj.mgIndex + ')'),myObj._number);		}			return 0;	}	else{		myObj.mgIndex = 0;				if (myObj.myMGsel){ //Si presiono alguna tecla mientras estaba seleccionado el text borro			 obj.value='';			 if (myObj.MSURL) myObj.MSList = '';			 myObj.myMGsel = false;		}		//alert(keyPressed);		if((keyPressed>47 && keyPressed<58) || (keyPressed>64 && keyPressed<91) || keyPressed==32 || keyPressed==36 || keyPressed==35 || keyPressed==192 || keyPressed==110 || keyPressed==190){			myObj.MSKey = obj.value + myKey;		}		else{ //Tecla invalida		    if (!evento) evento = window.event;		    if (evento.preventDefault) {		        evento.preventDefault();		    } else {		        evento.returnValue = false;		    }		}		}			myObj.MSCache[0] = obj;	myObj.MSCache[1] = evento;	//Decidir si va por ajax o no de acuerdo a si hay una lista cargada...	if (myObj.MSKey.length < myObj.minChar) myObj.MSList = ""; 	if (myObj.MSList.length > 2 && myObj.MSKey.length+1 > myObj.minChar){		document.getElementById('loading(' + pNro + ')').style.visibility = 'visible';					MagicSearchCloseResults(pNro);		MagicSearchKeyPress(obj, keyPressed, pNro);	}	else{		MagicSearchCloseResults(pNro);		if (myObj.MSKey != '' && myObj.MSKey.length >= myObj.minChar){				MagicSearchCloseResults(pNro);							document.getElementById('loading(' + pNro + ')').style.visibility = 'visible';							if (myObj.isWaiting == false) {					myObj.isWaiting = true;					loadListAjax(pNro, keyPressed);					}						}	}}	//---------------------------------------------------------------------------------------------------------------------------------------------function loadListAjax_callback(pNro){		var myObj = $msRegistro[pNro];		if (myObj.MSURL.length > 0) myObj.MSList = $msCh.response();		var myInput = myObj.MSCache[0];		var myKey = myObj.MSCache[1];		myObj.isWaiting = false;		MagicSearchKeyPress(myInput, myKey, pNro);}//---------------------------------------------------------------------------------------------------------------------------------------------	function loadListAjax(pNro,pKeyPressed){				var myObj = $msRegistro[pNro];		var myKey = String.fromCharCode(pKeyPressed);		var myInput = myObj.MSCache[0];		var auxURL = new String();		auxURL = myObj.MSURL		if (auxURL.length > 0) {			if (auxURL.indexOf('?') == -1) 				auxURL += '?';			else				auxURL += '&';					var link = auxURL + myObj.nameDIV + '=' + myInput.value + myKey;			var param = 'loadListAjax_callback(' + pNro + ')';					$msCh.bind(link, param);			$msCh.send();		} else {			loadListAjax_callback(pNro);		}}//---------------------------------------------------------------------------------------------------------------------------------------------	function CreateTableLoading(pNro){		var flag = 0;		var myOffsetTop = 0;		var myOffsetLeft = 0;		var myObj = $msRegistro[pNro];		MagicSearchCloseResults(pNro);		var myBody = document.getElementById(myObj.nameDIV);						var myTable = document.createElement("table");		myTable.setAttribute('id','loading(' + pNro + ')');		myTable.style.position = 'absolute';		myTable.style.visibility = 'hidden';		var myTableBody = document.createElement("tbody");		var myCurrentRow = document.createElement("tr");		var	myCurrentCell = document.createElement('td');		var myCurrentRow2 = document.createElement("tr");		var	myCurrentCell2 = document.createElement('td');		var myCurrentImg = document.createElement('img');		myCurrentCell.setAttribute('align','center');		myCurrentCell2.setAttribute('align','center');		myCurrentCell2.innerHTML = "<b>Aguarde por favor...</b>";		myCurrentImg.setAttribute('src', 'images/Loading4.gif');		myCurrentCell.appendChild(myCurrentImg);		myCurrentRow.appendChild(myCurrentCell);		myCurrentRow2.appendChild(myCurrentCell2);		myTableBody.appendChild(myCurrentRow);		myTableBody.appendChild(myCurrentRow2);					myTable.appendChild(myTableBody);		myTable.cellSpacing = 0;		myTable.cellPadding = 0;  		myTable.className = 'mgTable';		var parentObj = document.getElementById(myObj.myControlName).offsetParent;		try{			while (parentObj){				myOffsetTop = myOffsetTop + parentObj.offsetTop;				myOffsetLeft = myOffsetLeft + parentObj.offsetLeft;				parentObj = parentObj.offsetParent;			}		}			catch (e) {			//alert("No " + e.message + "TOP" + myOffsetTop + ", LEFT" + myOffsetLeft);		}		myTable.style.top = myOffsetTop + document.getElementById(myObj.myControlName).offsetTop + (document.getElementById(myObj.myControlName).offsetHeight);		myTable.style.left = myOffsetLeft + document.getElementById(myObj.myControlName).offsetLeft;		myTable.width = document.getElementById(myObj.myControlName).offsetWidth; 		myTable.style.height = document.getElementById(myObj.myControlName).offsetHeight * 3; 		myBody.appendChild(myTable);}